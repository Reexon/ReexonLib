<?xml version="1.0"?>
<project name="Reexon-lib" default="test" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant" xmlns:if="ant:if" xmlns:unless="ant:unless">
	<property name="main.build.dir" value="bin" />
	<property name="main.src.dir" value="src" />
	<property name="test.build.dir" value="bin/test" />
	<property name="test.src.dir" value="test" />

	<path id="classpath.base" />

	<path id="classpath">
		<pathelement location="lib/junit-4.11.jar" />
		<pathelement location="lib/hamcrest-core-1.3.jar" />
		<pathelement location="${main.build.dir}" />
		<path refid="classpath.base" />
	</path>

	<!-- Properties -->

	<path id="classpath">
		<fileset dir="${basedir}/lib">
			<include name="*.jar" />
		</fileset>
	</path>

	<target name="test" depends="run, clean" />

	<target name="1 - prepare">
		<antcall target="ivy-retrieve-eclipse" />
	</target>

	<target name="compile">
		<mkdir dir="${main.build.dir}" />
		<javac encoding="utf-8" srcdir="${main.src.dir}" destdir="${main.build.dir}" includeantruntime="false">
			<classpath refid="classpath.base" />
		</javac>
	</target>
	<target name="build" depends="compile">
		<mkdir dir="${test.build.dir}" />
		<javac srcdir="${test.src.dir}" destdir="${test.build.dir}" includeantruntime="false">
			<classpath refid="classpath.test" />
		</javac>
		<echo message="Build done" />
	</target>

	<!-- Test and build all files  -->
	<!-- To run this: use "ant" (default) or "ant run" -->
	<target name="run" depends="build">
		<junit printsummary="on" haltonfailure="yes">
			<classpath>
				<path refid="classpath.test" />
				<pathelement location="${test.build.dir}" />
			</classpath>
			<formatter type="brief" usefile="false" />
			<batchtest>
				<fileset dir="${test.src.dir}" includes="**/*Test*.java" />
			</batchtest>
		</junit>
	</target>
	<!-- delete all class files -->
	<!-- To run this: use "ant clean" -->
	<target name="clean">
		<delete>
			<fileset dir="${basedir}/bin" includes="**/*.class" />
		</delete>
		<echo message="clean done" />
	</target>
	<target name="clean_all">
		<delete includeEmptyDirs="true">
			<fileset dir="${basedir}/bin" />
		</delete>
		<echo message="clean all done" />
	</target>


	<!-- IVY TARGETS -->
	<target name="ivy-report">
		<ivy:configure override="true" file="${ivy.install.dir}/ivy-settings.xml" /> 
		<mkdir dir="ivy-report" />
		<ivy:resolve file="dependencies.xml" haltonfailure="false" />
		<ivy:report todir="ivy-report" />
		<eclipse.refreshLocal depth="infinite" resource="/" if:set="eclipse.running" />
	</target>

	<target name="ivy-retrieve-eclipse">
		<ivy:configure override="true" file="${ivy.install.dir}/ivy-settings.xml" />
		<ivy:retrieve sync="true" conf="*" type="jar,bundle" pattern="${project.local.lib}/[artifact]-[revision].[ext]" />

		<eclipse.refreshLocal depth="infinite" resource="/" if:set="eclipse.running" />
	</target>

	<target name="ivy-retrieve-zip">
		<property name="ivy.dep.file" value="${basedir}/dependencies.xml" />
		<ivy:configure override="true" file="${ivy.install.dir}/ivy-settings.xml" />
		<ivy:retrieve sync="true" conf="*" type="zip" pattern="${basedir}/zips/[artifact]-[revision].[ext]" />

		<eclipse.refreshLocal depth="infinite" resource="/" if:set="eclipse.running" />
	</target>

	<target name="ivy-retrieve-runtime">
		<ivy:configure override="true" file="${ivy.install.dir}/ivy-settings.xml" />
		<ivy:retrieve sync="true" conf="runtime" type="jar,bundle" pattern="build/lib-runtime/[artifact]-[revision].[ext]" />

		<eclipse.refreshLocal depth="infinite" resource="/" if:set="eclipse.running" />
	</target>

	<target name="ivy-retrieve-junit">
		<ivy:configure override="true" file="${ivy.install.dir}/ivy-settings.xml" />
		<ivy:retrieve sync="true" conf="junit" type="jar,bundle" pattern="${project.local.lib}/[artifact]-[revision].[ext]" />

		<eclipse.refreshLocal depth="infinite" resource="/" if:set="eclipse.running" />
	</target>

	<target name="ivy-retrieve-jar">
		<ivy:configure override="true" file="${ivy.install.dir}/ivy-settings.xml" />
		<ivy:retrieve sync="true" type="jar,bundle" pattern="${project.local.lib}/[artifact].[ext]" conf="provided" />

		<eclipse.refreshLocal depth="infinite" resource="/" if:set="eclipse.running" />
	</target>

	<target name="ivy-retrieve-src">
		<ivy:configure override="true" file="${ivy.install.dir}/ivy-settings.xml" />
		<ivy:retrieve sync="true" type="source" conf="*" pattern="build/srclib/[artifact]-[revision]-[type].[ext]" />

		<eclipse.refreshLocal depth="infinite" resource="/" if:set="eclipse.running" />
	</target>

	<target name="ivy-release">
		<ivy:configure override="true" file="${ivy.install.dir}/ivy-settings.xml" />
		<fail message="No ivy resolver selected" unless="ivy.resolver" />
		<ivy:resolve file="${ivy.dep.file}" conf="*" type="jar,zip" />
		<ivy:publish artifactspattern="${basedir}/build/publish/[artifact]-[revision].[ext]" resolver="${ivy.resolver}" pubrevision="${version}" status="release" overwrite="true" />
	</target>

	<target name="ivy-cleancache">
		<ivy:cleancache />
	</target>
</project>
